{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uCF54\\uB529\\\\\\uB9AC\\uC5D1\\uD2B8\\\\webrtc2\\\\client\\\\src\\\\components\\\\views\\\\LandingPage\\\\LandingPage.js\";\nimport React, { useEffect } from 'react'; // import axios from 'axios';\n\nfunction LandingPage(props) {\n  console.log(props);\n  console.log(this.props);\n  const localVideoref = React.createRef();\n  const remoteVideoref = React.createRef();\n  const pc_config = null;\n  var pc = new RTCPeerConnection(pc_config); // Similar to componentDidMount and componentDidUpdate:\n\n  useEffect(() => {\n    pc.onicecandidate = e => {\n      if (e.candidate) {\n        console.log(JSON.stringify(e.candidate));\n      }\n    };\n\n    pc.oniceconnectionstatechange = e => {\n      console.log(e);\n    };\n\n    pc.onaddstream = e => {\n      remoteVideoref.current.srcObject = e.stream;\n    };\n\n    const constraints = {\n      video: true\n    };\n\n    const success = stream => {\n      window.localStream = stream;\n      localVideoref.current.srcObject = stream;\n      pc.addStream(stream);\n    };\n\n    const failure = e => {\n      console.log('getUserMedia Errror: ', e);\n    };\n\n    navigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure);\n  });\n\n  const createOffer = () => {\n    console.log('Offer');\n    pc.createOffer({\n      offerToReceiveVideo: 1\n    }).then(sdp => {\n      console.log(JSON.stringify(sdp));\n      pc.setLocalDescription(sdp);\n    }, e => {});\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    style: {\n      width: 240,\n      height: 240,\n      margin: 5,\n      backgroundColor: 'black'\n    },\n    ref: localVideoref,\n    autoPlay: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"video\", {\n    style: {\n      width: 240,\n      height: 240,\n      margin: 5,\n      backgroundColor: 'black'\n    },\n    ref: remoteVideoref,\n    autoPlay: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: createOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Offer\"));\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["D:/코딩/리엑트/webrtc2/client/src/components/views/LandingPage/LandingPage.js"],"names":["React","useEffect","LandingPage","props","console","log","localVideoref","createRef","remoteVideoref","pc_config","pc","RTCPeerConnection","onicecandidate","e","candidate","JSON","stringify","oniceconnectionstatechange","onaddstream","current","srcObject","stream","constraints","video","success","window","localStream","addStream","failure","navigator","mediaDevices","getUserMedia","then","catch","createOffer","offerToReceiveVideo","sdp","setLocalDescription","width","height","margin","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\nfunction LandingPage(props) {\r\n    console.log(props)\r\n    console.log(this.props)\r\n    const localVideoref = React.createRef()\r\n    const remoteVideoref = React.createRef()\r\n    const pc_config = null\r\n    var pc = new RTCPeerConnection(pc_config)\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    useEffect(() => { \r\n        pc.onicecandidate = (e) => {\r\n            if(e.candidate){\r\n                console.log(JSON.stringify(e.candidate))\r\n            }\r\n        }\r\n        pc.oniceconnectionstatechange = (e) => {\r\n            console.log(e)\r\n        }\r\n    \r\n        pc.onaddstream = (e) => {\r\n            remoteVideoref.current.srcObject = e.stream\r\n        }\r\n\r\n        const constraints = {video: true}\r\n        const success = (stream) => {\r\n            window.localStream = stream\r\n            localVideoref.current.srcObject = stream\r\n            pc.addStream(stream)\r\n        }\r\n        const failure = (e) => {\r\n            console.log('getUserMedia Errror: ', e)\r\n        }\r\n\r\n        navigator.mediaDevices.getUserMedia(constraints)\r\n        .then( success )\r\n        .catch( failure )\r\n    }); \r\n\r\n    const createOffer = () => {\r\n        console.log('Offer')\r\n        pc.createOffer({offerToReceiveVideo: 1})\r\n        .then(sdp => {\r\n            console.log(JSON.stringify(sdp))\r\n            pc.setLocalDescription(sdp)\r\n        }, e => {})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <video\r\n                style={{\r\n                    width:240, height:240,\r\n                    margin: 5, backgroundColor: 'black'\r\n                }} \r\n                ref={localVideoref} \r\n                autoPlay>\r\n            </video>\r\n            <video\r\n                style={{\r\n                    width:240, height:240,\r\n                    margin: 5, backgroundColor: 'black'\r\n                }} \r\n                ref={remoteVideoref} \r\n                autoPlay>\r\n            </video>\r\n\r\n            <button onClick={createOffer}>Offer</button>\r\n            {/* <button onClick={createAnswer}>Answer</button>\r\n            <br />\r\n            <textarea ref={ref => {textref = ref}} />\r\n            <br />\r\n            <button onClick={setRemoteDescription}>Set Remote Desc</button>\r\n            <button onClick={addCandidate}>Add Candidate</button> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LandingPage;"]},"metadata":{},"sourceType":"module"}