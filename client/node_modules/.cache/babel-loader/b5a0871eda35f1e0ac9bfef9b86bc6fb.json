{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uCF54\\uB529\\\\\\uB9AC\\uC5D1\\uD2B8\\\\webrtc2\\\\client\\\\src\\\\components\\\\views\\\\LandingPage\\\\LandingPage.js\";\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\n\nfunction LandingPage(props) {\n  const localVideoref = React.createRef();\n  const remoteVideoref = React.createRef(); // Similar to componentDidMount and componentDidUpdate:\n\n  useEffect(() => {});\n  const constraints = {\n    video: true\n  };\n\n  const success = stream => {\n    window.localStream = stream;\n    localVideoref.current.srcObject = stream;\n    pc.addStream(stream);\n  };\n\n  const failure = e => {\n    console.log('getUserMedia Errror: ', e);\n  };\n\n  const pc_config = null;\n  var pc = new RTCPeerConnection(null);\n  navigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure);\n\n  pc.onicecandidate = e => {\n    if (e.candidate) {\n      console.log(JSON.stringify(e.candidate));\n    }\n  };\n\n  pc.oniceconnectionstatechange = e => {\n    console.log(e);\n  };\n\n  pc.onaddstream = e => {\n    remoteVideoref.current.srcObject = e.stream;\n  };\n\n  const createOffer = () => {\n    console.log('Offer');\n    pc.createOffer({\n      offerToReceiveVideo: 1\n    }).then(sdp => {\n      console.log(JSON.stringify(sdp));\n      pc.setLocalDescription(sdp);\n    }, e => {});\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    style: {\n      width: 240,\n      height: 240,\n      margin: 5,\n      backgroundColor: 'black'\n    },\n    ref: localVideoref,\n    autoPlay: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"video\", {\n    style: {\n      width: 240,\n      height: 240,\n      margin: 5,\n      backgroundColor: 'black'\n    },\n    ref: remoteVideoref,\n    autoPlay: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: createOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Offer\"));\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["D:/코딩/리엑트/webrtc2/client/src/components/views/LandingPage/LandingPage.js"],"names":["React","useEffect","axios","LandingPage","props","localVideoref","createRef","remoteVideoref","constraints","video","success","stream","window","localStream","current","srcObject","pc","addStream","failure","e","console","log","pc_config","RTCPeerConnection","navigator","mediaDevices","getUserMedia","then","catch","onicecandidate","candidate","JSON","stringify","oniceconnectionstatechange","onaddstream","createOffer","offerToReceiveVideo","sdp","setLocalDescription","width","height","margin","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction LandingPage(props) {\r\n    const localVideoref = React.createRef()\r\n    const remoteVideoref = React.createRef()\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    useEffect(() => { \r\n\r\n    }); \r\n\r\n    const constraints = {video: true}\r\n    const success = (stream) => {\r\n        window.localStream = stream\r\n        localVideoref.current.srcObject = stream\r\n        pc.addStream(stream)\r\n    }\r\n    const failure = (e) => {\r\n        console.log('getUserMedia Errror: ', e)\r\n    }\r\n    const pc_config = null\r\n    var pc = new RTCPeerConnection(null)\r\n   \r\n    navigator.mediaDevices.getUserMedia(constraints)\r\n    .then( success )\r\n    .catch( failure )\r\n   \r\n    pc.onicecandidate = (e) => {\r\n        if(e.candidate){\r\n            console.log(JSON.stringify(e.candidate))\r\n        }\r\n    }\r\n    pc.oniceconnectionstatechange = (e) => {\r\n        console.log(e)\r\n    }\r\n\r\n    pc.onaddstream = (e) => {\r\n        remoteVideoref.current.srcObject = e.stream\r\n    }\r\n\r\n    const createOffer = () => {\r\n        console.log('Offer')\r\n        pc.createOffer({offerToReceiveVideo: 1})\r\n        .then(sdp => {\r\n            console.log(JSON.stringify(sdp))\r\n            pc.setLocalDescription(sdp)\r\n        }, e => {})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <video\r\n                style={{\r\n                    width:240, height:240,\r\n                    margin: 5, backgroundColor: 'black'\r\n                }} \r\n                ref={localVideoref} \r\n                autoPlay>\r\n            </video>\r\n            <video\r\n                style={{\r\n                    width:240, height:240,\r\n                    margin: 5, backgroundColor: 'black'\r\n                }} \r\n                ref={remoteVideoref} \r\n                autoPlay>\r\n            </video>\r\n\r\n            <button onClick={createOffer}>Offer</button>\r\n            {/* <button onClick={createAnswer}>Answer</button>\r\n            <br />\r\n            <textarea ref={ref => {textref = ref}} />\r\n            <br />\r\n            <button onClick={setRemoteDescription}>Set Remote Desc</button>\r\n            <button onClick={addCandidate}>Add Candidate</button> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LandingPage;"]},"metadata":{},"sourceType":"module"}